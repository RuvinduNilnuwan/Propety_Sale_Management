/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.addController;
import Control.updateController;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import Control.DeleteControl;
import Control.ResControl;
import Model.DBSearch;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

import java.io.*;
import java.util.*;
import Model.DBCon;
import Model.DBSearch;
import com.mysql.jdbc.Statement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import Control.addController;
import Model.DBAdd;

import java.text.*;
import java.awt.print.*;
import javafx.print.Printer;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
/**
 *
 * @author pc
 */
public class Transactions extends javax.swing.JInternalFrame {
Statement stmt;
Statement stt;
ResultSet rss;
    ResultSet rs ;
    ResultSet rs1 ;
    String projectid;
    String projectid1;
    String blockid;
    String blockidd;
    String blockid1;
    String Nic;
    String Nic1;
    String Nic2;
    String ratename;
    String projectid4;
    String proidd;
    double Bal;
    int Inst;
    double Anm;
    double Value;
    double EstVal;
    double Adv;
    DecimalFormat df = new DecimalFormat("#.##");
    DecimalFormat decFormat = new DecimalFormat("#.##%");
    private String projectid2;
    private String blockid2;
    /**
     * Creates new form Transactions
     */
    public Transactions() {
        initComponents();
        LoadId();
        LoadId1();
        //LoadIdBlock();
        LoadNIC();
        LoadNIC1();
        LoadNIC2();
        AutoComplete();
        loadCustomerID();
        loadCustomerID2();
        loadpro();
        loadlif();
        loadlbkid();
        
        
        
        //txtPayment.enable(false);
        txtCurrentDueAmount.enable(false);
        txtDateNow.setVisible(false);
        txtTimeNow.setVisible(false);
        
        txtDate.setVisible(false);
        txtTime.setVisible(false);
        txtDateNow.setVisible(false);
        txtTimeNow.setVisible(false);     
        
        txtDateNow1.setVisible(false);
        txtTimeNow1.setVisible(false);
        txtMonths.setVisible(false);
         
        
        Calendar calendar = Calendar.getInstance(); 
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        txtAgreementDate.setText(""+ sdf.format(calendar.getTime()));
        txtAgreementDate1.setText(""+ sdf.format(calendar.getTime()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTrans = new javax.swing.JPanel();
        lblLandManagement = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pnlBase = new javax.swing.JPanel();
        lblSJ = new javax.swing.JLabel();
        pnlLand = new javax.swing.JPanel();
        lblProjectId = new javax.swing.JLabel();
        cmbProjectId = new javax.swing.JComboBox<>();
        lblBlockId = new javax.swing.JLabel();
        cmbBlockId = new javax.swing.JComboBox<>();
        lblLocation = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        lblAgreement = new javax.swing.JLabel();
        txtAgreement = new javax.swing.JTextField();
        pnlCustomer = new javax.swing.JPanel();
        lblNIC = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        cmbNic = new javax.swing.JComboBox<>();
        lblCusId = new javax.swing.JLabel();
        cmbCusId = new javax.swing.JComboBox<>();
        pnlBill = new javax.swing.JPanel();
        lblLandValue = new javax.swing.JLabel();
        txtLandValue = new javax.swing.JTextField();
        lblAdvance = new javax.swing.JLabel();
        txtAdvance = new javax.swing.JTextField();
        lblAdvanceRate = new javax.swing.JLabel();
        lblPercentageMark = new javax.swing.JLabel();
        lblBalanceAmount = new javax.swing.JLabel();
        txtBalanceAmount = new javax.swing.JTextField();
        lblAnnum = new javax.swing.JLabel();
        lblAnnumRate = new javax.swing.JLabel();
        lblPM = new javax.swing.JLabel();
        lblPeriod = new javax.swing.JLabel();
        lblYears = new javax.swing.JLabel();
        txtYears = new javax.swing.JTextField();
        txtMonths = new javax.swing.JTextField();
        lblInstallments = new javax.swing.JLabel();
        txtInstallments = new javax.swing.JTextField();
        lblMonthlyInstallment = new javax.swing.JLabel();
        txtMonthlyInstallment = new javax.swing.JTextField();
        lblBalanceOfHPA = new javax.swing.JLabel();
        txtBalanceOfHPA = new javax.swing.JTextField();
        lblTotalInterest = new javax.swing.JLabel();
        txtTotalInterest = new javax.swing.JTextField();
        lblHirePurchaseAmount = new javax.swing.JLabel();
        txtHirePurchaseAmount = new javax.swing.JTextField();
        lblPlatRate = new javax.swing.JLabel();
        txtPlatRate = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        pnlDate = new javax.swing.JPanel();
        lblAgreementDate = new javax.swing.JLabel();
        lblCompletedDate = new javax.swing.JLabel();
        lblDueDate = new javax.swing.JLabel();
        txtDueDate = new javax.swing.JTextField();
        lblNextPaymentDate = new javax.swing.JLabel();
        txtCompletedDate = new javax.swing.JTextField();
        txtAgreementDate = new javax.swing.JTextField();
        txtNextPaymentDate = new javax.swing.JTextField();
        lblCompleteDateVal = new javax.swing.JLabel();
        lblAgreeDateVal = new javax.swing.JLabel();
        lblDueDateVal = new javax.swing.JLabel();
        lblFirstDateVal = new javax.swing.JLabel();
        pnlButtons = new javax.swing.JPanel();
        btnPrintAgreement = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnViewReceipt = new javax.swing.JButton();
        txtDateNow = new javax.swing.JTextField();
        txtTimeNow = new javax.swing.JTextField();
        pnlTextField = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReceipt = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCustomerNIC = new javax.swing.JTextField();
        txtCustomerName = new javax.swing.JTextField();
        cmbCustomerID = new javax.swing.JComboBox<>();
        txtCustomerAddress = new javax.swing.JTextField();
        btnPay = new javax.swing.JButton();
        btnGenarate = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        lblnoOfMonths = new javax.swing.JLabel();
        txtDateNow1 = new javax.swing.JTextField();
        txtTimeNow1 = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCurrentDueDate = new javax.swing.JTextField();
        txtPayment = new javax.swing.JTextField();
        txtCurrentDueAmount = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        tp = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMonthlyRecipt = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        pnlBase1 = new javax.swing.JPanel();
        lblSJ1 = new javax.swing.JLabel();
        pnlLand1 = new javax.swing.JPanel();
        lblProjectId1 = new javax.swing.JLabel();
        cmbProjectId1 = new javax.swing.JComboBox<>();
        lblBlockId1 = new javax.swing.JLabel();
        cmbBlockId1 = new javax.swing.JComboBox<>();
        lblLocation1 = new javax.swing.JLabel();
        txtLocation1 = new javax.swing.JTextField();
        lblAgreement1 = new javax.swing.JLabel();
        txtAgreement1 = new javax.swing.JTextField();
        lblLandValue1 = new javax.swing.JLabel();
        txtLandValue1 = new javax.swing.JTextField();
        lblAgreementDate1 = new javax.swing.JLabel();
        txtAgreementDate1 = new javax.swing.JTextField();
        lblAgreeDateVal1 = new javax.swing.JLabel();
        pnlCustomer1 = new javax.swing.JPanel();
        lblNIC1 = new javax.swing.JLabel();
        lblName1 = new javax.swing.JLabel();
        txtName1 = new javax.swing.JTextField();
        lblAddress1 = new javax.swing.JLabel();
        txtAddress1 = new javax.swing.JTextField();
        cmbNic1 = new javax.swing.JComboBox<>();
        lblCusId1 = new javax.swing.JLabel();
        cmbCusId1 = new javax.swing.JComboBox<>();
        txtDate1 = new javax.swing.JTextField();
        txtTime1 = new javax.swing.JTextField();
        pnlButtons1 = new javax.swing.JPanel();
        btnPrintAgreement1 = new javax.swing.JButton();
        btnReset1 = new javax.swing.JButton();
        btnViewReceipt1 = new javax.swing.JButton();
        txtDateNow2 = new javax.swing.JTextField();
        txtTimeNow2 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtFullPayReceipt = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        pte = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        dte = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        rsr = new javax.swing.JButton();
        vrc = new javax.swing.JButton();
        sp = new javax.swing.JButton();
        pnlCustomer2 = new javax.swing.JPanel();
        lblNIC2 = new javax.swing.JLabel();
        lblName2 = new javax.swing.JLabel();
        txtName2 = new javax.swing.JTextField();
        lblAddress2 = new javax.swing.JLabel();
        txtAddress2 = new javax.swing.JTextField();
        cmbNic2 = new javax.swing.JComboBox<>();
        lblCusId2 = new javax.swing.JLabel();
        cmbCusId2 = new javax.swing.JComboBox<>();
        pnlLand2 = new javax.swing.JPanel();
        lblProjectId2 = new javax.swing.JLabel();
        cmbProjectId5 = new javax.swing.JComboBox<>();
        lblBlockId2 = new javax.swing.JLabel();
        lblLocation2 = new javax.swing.JLabel();
        txtLocation2 = new javax.swing.JTextField();
        lblAgreement2 = new javax.swing.JLabel();
        txtAgreement2 = new javax.swing.JTextField();
        prdr = new javax.swing.JComboBox<>();
        lblSJ2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        rept = new javax.swing.JTextArea();
        lName = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(2008, 873));

        pnlTrans.setBackground(new java.awt.Color(255, 255, 255));

        lblLandManagement.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblLandManagement.setText("Manage Transactions");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("X");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(0, 102, 102));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        pnlBase.setBackground(new java.awt.Color(0, 102, 102));
        pnlBase.setMaximumSize(null);
        pnlBase.setRequestFocusEnabled(false);

        lblSJ.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        lblSJ.setForeground(new java.awt.Color(255, 255, 255));
        lblSJ.setText("Details of Easy Payment Agreement");

        pnlLand.setBackground(new java.awt.Color(255, 255, 255));
        pnlLand.setMaximumSize(null);

        lblProjectId.setText("Project ID");

        cmbProjectId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProjectIdItemStateChanged(evt);
            }
        });
        cmbProjectId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProjectIdActionPerformed(evt);
            }
        });

        lblBlockId.setText("Block ID");

        cmbBlockId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbBlockIdItemStateChanged(evt);
            }
        });
        cmbBlockId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbBlockIdMouseClicked(evt);
            }
        });
        cmbBlockId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBlockIdActionPerformed(evt);
            }
        });

        lblLocation.setText("Location");

        txtLocation.setEditable(false);
        txtLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocationActionPerformed(evt);
            }
        });

        lblAgreement.setText("Agreement No.");

        txtAgreement.setEditable(false);
        txtAgreement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgreementActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLandLayout = new javax.swing.GroupLayout(pnlLand);
        pnlLand.setLayout(pnlLandLayout);
        pnlLandLayout.setHorizontalGroup(
            pnlLandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLandLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlLandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProjectId)
                    .addComponent(lblBlockId)
                    .addComponent(lblLocation)
                    .addComponent(lblAgreement))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlLandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbProjectId, 0, 346, Short.MAX_VALUE)
                    .addComponent(cmbBlockId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtLocation)
                    .addComponent(txtAgreement))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLandLayout.setVerticalGroup(
            pnlLandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLandLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlLandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProjectId, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbProjectId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBlockId)
                    .addComponent(cmbBlockId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocation)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlLandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgreement)
                    .addComponent(txtAgreement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pnlCustomer.setBackground(new java.awt.Color(255, 255, 255));
        pnlCustomer.setMaximumSize(null);
        pnlCustomer.setPreferredSize(new java.awt.Dimension(570, 190));

        lblNIC.setText("NIC");

        lblName.setText("Name");

        txtName.setEditable(false);

        lblAddress.setText("Address");

        txtAddress.setEditable(false);

        cmbNic.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNicItemStateChanged(evt);
            }
        });
        cmbNic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNicActionPerformed(evt);
            }
        });

        lblCusId.setText("Customer ID");

        cmbCusId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCusIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCustomerLayout = new javax.swing.GroupLayout(pnlCustomer);
        pnlCustomer.setLayout(pnlCustomerLayout);
        pnlCustomerLayout.setHorizontalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCusId)
                    .addComponent(lblNIC)
                    .addComponent(lblName)
                    .addComponent(lblAddress))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtName)
                    .addComponent(cmbCusId, javax.swing.GroupLayout.Alignment.LEADING, 0, 338, Short.MAX_VALUE)
                    .addComponent(cmbNic, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtAddress))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        pnlCustomerLayout.setVerticalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbNic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNIC))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCusId)
                    .addComponent(cmbCusId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pnlBill.setBackground(new java.awt.Color(255, 255, 255));
        pnlBill.setMaximumSize(null);

        lblLandValue.setText("Value of Land");

        txtLandValue.setEditable(false);
        txtLandValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLandValueActionPerformed(evt);
            }
        });

        lblAdvance.setText("Advance Payment");

        txtAdvance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAdvanceMouseClicked(evt);
            }
        });

        lblAdvanceRate.setText("******");

        lblPercentageMark.setText("%");

        lblBalanceAmount.setText("Balance Amount");

        txtBalanceAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBalanceAmountMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtBalanceAmountMouseEntered(evt);
            }
        });
        txtBalanceAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalanceAmountActionPerformed(evt);
            }
        });

        lblAnnum.setText("Rate Per Annum");

        lblAnnumRate.setText("******");

        lblPM.setText("%");

        lblPeriod.setText("Period");

        lblYears.setText("Years");

        txtYears.setText("0");
        txtYears.setToolTipText("");
        txtYears.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtYearsMouseClicked(evt);
            }
        });

        txtMonths.setText("0");
        txtMonths.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMonthsMouseClicked(evt);
            }
        });
        txtMonths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonthsActionPerformed(evt);
            }
        });
        txtMonths.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMonthsKeyPressed(evt);
            }
        });

        lblInstallments.setText("Number of Installments");

        txtInstallments.setEditable(false);
        txtInstallments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtInstallmentsMouseClicked(evt);
            }
        });
        txtInstallments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInstallmentsActionPerformed(evt);
            }
        });

        lblMonthlyInstallment.setText("Monthly Installment");

        txtMonthlyInstallment.setEditable(false);
        txtMonthlyInstallment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMonthlyInstallmentMouseClicked(evt);
            }
        });

        lblBalanceOfHPA.setText("Balance of Hire Purchase Amount");

        txtBalanceOfHPA.setEditable(false);

        lblTotalInterest.setText("Total Interest");

        txtTotalInterest.setEditable(false);

        lblHirePurchaseAmount.setText("Hire Purchase Amount");

        txtHirePurchaseAmount.setEditable(false);
        txtHirePurchaseAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHirePurchaseAmountActionPerformed(evt);
            }
        });

        lblPlatRate.setText("Plat Rate Per Annum");

        txtPlatRate.setEditable(false);
        txtPlatRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlatRateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBillLayout = new javax.swing.GroupLayout(pnlBill);
        pnlBill.setLayout(pnlBillLayout);
        pnlBillLayout.setHorizontalGroup(
            pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBillLayout.createSequentialGroup()
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBillLayout.createSequentialGroup()
                        .addContainerGap(23, Short.MAX_VALUE)
                        .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBalanceAmount)
                            .addGroup(pnlBillLayout.createSequentialGroup()
                                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBillLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(lblAnnumRate))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBillLayout.createSequentialGroup()
                                        .addComponent(lblAdvance)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 68, Short.MAX_VALUE)
                                        .addComponent(lblAdvanceRate))
                                    .addGroup(pnlBillLayout.createSequentialGroup()
                                        .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPeriod)
                                            .addComponent(lblAnnum))
                                        .addGap(97, 97, 97)))
                                .addGap(18, 27, Short.MAX_VALUE)
                                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPercentageMark)
                                    .addComponent(lblPM))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlBillLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lblLandValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlBillLayout.createSequentialGroup()
                        .addComponent(lblYears)
                        .addGap(18, 18, 18)
                        .addComponent(txtYears, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                    .addGroup(pnlBillLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(txtMonths))
                    .addComponent(txtLandValue)
                    .addComponent(txtAdvance)
                    .addComponent(txtBalanceAmount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMonthlyInstallment)
                    .addComponent(lblInstallments)
                    .addComponent(lblHirePurchaseAmount)
                    .addComponent(lblBalanceOfHPA)
                    .addComponent(lblTotalInterest)
                    .addComponent(lblPlatRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtInstallments, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                    .addComponent(txtMonthlyInstallment)
                    .addComponent(txtHirePurchaseAmount)
                    .addComponent(txtBalanceOfHPA)
                    .addComponent(txtTotalInterest)
                    .addComponent(txtPlatRate))
                .addContainerGap())
        );
        pnlBillLayout.setVerticalGroup(
            pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBillLayout.createSequentialGroup()
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBillLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLandValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInstallments)
                            .addComponent(txtInstallments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(pnlBillLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblLandValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAdvance)
                    .addComponent(txtAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAdvanceRate)
                    .addComponent(lblPercentageMark)
                    .addComponent(lblMonthlyInstallment)
                    .addComponent(txtMonthlyInstallment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBalanceAmount)
                    .addComponent(txtBalanceAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHirePurchaseAmount)
                    .addComponent(txtHirePurchaseAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPM, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAnnum)
                        .addComponent(lblAnnumRate)
                        .addComponent(lblBalanceOfHPA)
                        .addComponent(txtBalanceOfHPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPeriod)
                        .addComponent(txtYears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblYears)
                        .addComponent(lblTotalInterest))
                    .addComponent(txtTotalInterest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMonths, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlatRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlatRate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtDate.setEditable(false);

        txtTime.setEditable(false);
        txtTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeActionPerformed(evt);
            }
        });

        pnlDate.setBackground(new java.awt.Color(255, 255, 255));

        lblAgreementDate.setText("Agreement Date");

        lblCompletedDate.setText("Completed Date");

        lblDueDate.setText("Due Date");

        lblNextPaymentDate.setText("First Payment Date");

        txtCompletedDate.setEditable(false);
        txtCompletedDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCompletedDateMouseClicked(evt);
            }
        });
        txtCompletedDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompletedDateActionPerformed(evt);
            }
        });

        txtAgreementDate.setEditable(false);

        javax.swing.GroupLayout pnlDateLayout = new javax.swing.GroupLayout(pnlDate);
        pnlDate.setLayout(pnlDateLayout);
        pnlDateLayout.setHorizontalGroup(
            pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDateLayout.createSequentialGroup()
                .addGroup(pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlDateLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAgreementDate, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAgreeDateVal, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(134, 134, 134)
                        .addGroup(pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCompleteDateVal, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCompletedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66))
                    .addGroup(pnlDateLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(lblAgreementDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCompletedDate)
                        .addGap(101, 101, 101)))
                .addGroup(pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDateLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNextPaymentDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFirstDateVal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(78, 78, 78)
                        .addGroup(pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDueDateVal, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))
                    .addGroup(pnlDateLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(lblNextPaymentDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDueDate)
                        .addGap(98, 98, 98))))
        );
        pnlDateLayout.setVerticalGroup(
            pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDateLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNextPaymentDate)
                    .addComponent(lblCompletedDate)
                    .addComponent(lblAgreementDate)
                    .addComponent(lblDueDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAgreementDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCompletedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNextPaymentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAgreeDateVal, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCompleteDateVal, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFirstDateVal, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDueDateVal, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlButtons.setBackground(new java.awt.Color(255, 255, 255));

        btnPrintAgreement.setBackground(new java.awt.Color(0, 102, 102));
        btnPrintAgreement.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnPrintAgreement.setForeground(new java.awt.Color(255, 255, 255));
        btnPrintAgreement.setText("Save & Print Receipt");
        btnPrintAgreement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintAgreementActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(0, 102, 102));
        btnReset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnViewReceipt.setBackground(new java.awt.Color(0, 102, 102));
        btnViewReceipt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnViewReceipt.setForeground(new java.awt.Color(255, 255, 255));
        btnViewReceipt.setText("View Receipt");
        btnViewReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewReceiptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnViewReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(btnPrintAgreement, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrintAgreement, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTextField.setBackground(new java.awt.Color(0, 102, 102));

        txtReceipt.setColumns(20);
        txtReceipt.setRows(5);
        txtReceipt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(txtReceipt);

        javax.swing.GroupLayout pnlTextFieldLayout = new javax.swing.GroupLayout(pnlTextField);
        pnlTextField.setLayout(pnlTextFieldLayout);
        pnlTextFieldLayout.setHorizontalGroup(
            pnlTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTextFieldLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTextFieldLayout.setVerticalGroup(
            pnlTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTextFieldLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlBaseLayout = new javax.swing.GroupLayout(pnlBase);
        pnlBase.setLayout(pnlBaseLayout);
        pnlBaseLayout.setHorizontalGroup(
            pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnlBaseLayout.createSequentialGroup()
                            .addComponent(pnlLand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(pnlBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlBaseLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSJ, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBaseLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDateNow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(txtTimeNow, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(pnlBaseLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(pnlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlBaseLayout.setVerticalGroup(
            pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDateNow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimeNow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSJ)
                .addGap(0, 4, Short.MAX_VALUE)
                .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE)
                .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBaseLayout.createSequentialGroup()
                        .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlLand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1026, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Easy Pay", jPanel1);

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Customer Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Customer ID :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Name :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("NIC :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Address : ");

        cmbCustomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCustomerIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtCustomerName)
                        .addComponent(cmbCustomerID, 0, 209, Short.MAX_VALUE)
                        .addComponent(txtCustomerAddress))
                    .addComponent(txtCustomerNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(txtCustomerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCustomerNIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        btnPay.setBackground(new java.awt.Color(0, 102, 102));
        btnPay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPay.setForeground(new java.awt.Color(255, 255, 255));
        btnPay.setText("Pay Now");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        btnGenarate.setBackground(new java.awt.Color(0, 102, 102));
        btnGenarate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGenarate.setForeground(new java.awt.Color(255, 255, 255));
        btnGenarate.setText("Save & Print Recipt");
        btnGenarate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenarateActionPerformed(evt);
            }
        });

        btnPrint.setBackground(new java.awt.Color(0, 102, 102));
        btnPrint.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPrint.setForeground(new java.awt.Color(255, 255, 255));
        btnPrint.setText("View Recipt");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        lblnoOfMonths.setForeground(new java.awt.Color(255, 255, 255));

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Payment Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Current Due Date :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("monthly Due Amount : ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Payment : ");

        txtCurrentDueAmount.setEditable(false);
        txtCurrentDueAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentDueAmountActionPerformed(evt);
            }
        });

        lblStatus.setForeground(new java.awt.Color(255, 255, 255));
        lblStatus.setText("jh");

        tp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpActionPerformed(evt);
            }
        });

        jLabel14.setText("Amount to be payed");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(60, 60, 60)
                                .addComponent(txtPayment))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCurrentDueAmount))))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel6))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tp)
                            .addComponent(txtCurrentDueDate))))
                .addGap(40, 40, 40))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblStatus)
                .addGap(92, 92, 92))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(lblStatus)
                .addGap(31, 31, 31)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCurrentDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCurrentDueAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPayment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        txtMonthlyRecipt.setColumns(20);
        txtMonthlyRecipt.setRows(5);
        jScrollPane2.setViewportView(txtMonthlyRecipt);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(btnGenarate, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(29, 29, 29)))
                        .addGap(16, 16, 16))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblnoOfMonths)
                        .addGap(58, 58, 58))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(txtDateNow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTimeNow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDateNow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimeNow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblnoOfMonths)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGenarate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Monthly Payment");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(1379, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(366, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Monthly Payment", jPanel2);

        jPanel8.setBackground(new java.awt.Color(0, 102, 102));

        pnlBase1.setBackground(new java.awt.Color(0, 102, 102));
        pnlBase1.setMaximumSize(null);
        pnlBase1.setRequestFocusEnabled(false);

        lblSJ1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        lblSJ1.setForeground(new java.awt.Color(255, 255, 255));
        lblSJ1.setText("Details of  Full Payment Agreement");

        pnlLand1.setBackground(new java.awt.Color(255, 255, 255));
        pnlLand1.setMaximumSize(null);

        lblProjectId1.setText("Project ID");

        cmbProjectId1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProjectId1ItemStateChanged(evt);
            }
        });
        cmbProjectId1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProjectId1ActionPerformed(evt);
            }
        });

        lblBlockId1.setText("Block ID");

        cmbBlockId1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbBlockId1ItemStateChanged(evt);
            }
        });
        cmbBlockId1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbBlockId1MouseClicked(evt);
            }
        });
        cmbBlockId1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBlockId1ActionPerformed(evt);
            }
        });

        lblLocation1.setText("Location");

        txtLocation1.setEditable(false);

        lblAgreement1.setText("Agreement No.");

        txtAgreement1.setEditable(false);
        txtAgreement1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgreement1ActionPerformed(evt);
            }
        });

        lblLandValue1.setText("Payment");

        txtLandValue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLandValue1ActionPerformed(evt);
            }
        });

        lblAgreementDate1.setText("Agreement Date");

        txtAgreementDate1.setEditable(false);
        txtAgreementDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgreementDate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLand1Layout = new javax.swing.GroupLayout(pnlLand1);
        pnlLand1.setLayout(pnlLand1Layout);
        pnlLand1Layout.setHorizontalGroup(
            pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLand1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLand1Layout.createSequentialGroup()
                        .addGroup(pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLand1Layout.createSequentialGroup()
                                .addComponent(lblLandValue1)
                                .addGap(26, 26, 26)
                                .addComponent(txtLandValue1))
                            .addGroup(pnlLand1Layout.createSequentialGroup()
                                .addComponent(lblLocation1)
                                .addGap(64, 64, 64)
                                .addComponent(txtLocation1))
                            .addGroup(pnlLand1Layout.createSequentialGroup()
                                .addComponent(lblBlockId1)
                                .addGap(64, 64, 64)
                                .addComponent(cmbBlockId1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlLand1Layout.createSequentialGroup()
                                .addComponent(lblProjectId1)
                                .addGap(52, 52, 52)
                                .addComponent(cmbProjectId1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlLand1Layout.createSequentialGroup()
                                .addComponent(lblAgreement1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAgreement1)))
                        .addGap(30, 30, 30))
                    .addGroup(pnlLand1Layout.createSequentialGroup()
                        .addComponent(lblAgreementDate1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAgreeDateVal1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAgreementDate1))
                        .addGap(33, 33, 33))))
        );
        pnlLand1Layout.setVerticalGroup(
            pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLand1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProjectId1)
                    .addComponent(cmbProjectId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBlockId1)
                    .addComponent(cmbBlockId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLocation1)
                    .addComponent(txtLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgreement1)
                    .addComponent(txtAgreement1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLandValue1)
                    .addComponent(txtLandValue1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLand1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgreementDate1)
                    .addComponent(txtAgreementDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAgreeDateVal1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlCustomer1.setBackground(new java.awt.Color(255, 255, 255));
        pnlCustomer1.setMaximumSize(null);
        pnlCustomer1.setPreferredSize(new java.awt.Dimension(570, 190));

        lblNIC1.setText("NIC");

        lblName1.setText("Name");

        txtName1.setEditable(false);
        txtName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtName1ActionPerformed(evt);
            }
        });

        lblAddress1.setText("Address");

        txtAddress1.setEditable(false);
        txtAddress1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddress1ActionPerformed(evt);
            }
        });

        cmbNic1.setEditable(true);
        cmbNic1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNic1ItemStateChanged(evt);
            }
        });
        cmbNic1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNic1ActionPerformed(evt);
            }
        });

        lblCusId1.setText("Customer ID");

        cmbCusId1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCusId1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCustomer1Layout = new javax.swing.GroupLayout(pnlCustomer1);
        pnlCustomer1.setLayout(pnlCustomer1Layout);
        pnlCustomer1Layout.setHorizontalGroup(
            pnlCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomer1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(pnlCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCusId1)
                    .addComponent(lblNIC1)
                    .addComponent(lblName1)
                    .addComponent(lblAddress1))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtName1)
                    .addComponent(cmbCusId1, javax.swing.GroupLayout.Alignment.LEADING, 0, 338, Short.MAX_VALUE)
                    .addComponent(cmbNic1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtAddress1))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        pnlCustomer1Layout.setVerticalGroup(
            pnlCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomer1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(pnlCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbNic1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNIC1))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCusId1)
                    .addComponent(cmbCusId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCustomer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress1)
                    .addComponent(txtAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        txtDate1.setEditable(false);

        txtTime1.setEditable(false);
        txtTime1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTime1ActionPerformed(evt);
            }
        });

        pnlButtons1.setBackground(new java.awt.Color(255, 255, 255));

        btnPrintAgreement1.setBackground(new java.awt.Color(0, 102, 102));
        btnPrintAgreement1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnPrintAgreement1.setForeground(new java.awt.Color(255, 255, 255));
        btnPrintAgreement1.setText("Save & Print Receipt");
        btnPrintAgreement1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintAgreement1ActionPerformed(evt);
            }
        });

        btnReset1.setBackground(new java.awt.Color(0, 102, 102));
        btnReset1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReset1.setForeground(new java.awt.Color(255, 255, 255));
        btnReset1.setText("Reset");
        btnReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset1ActionPerformed(evt);
            }
        });

        btnViewReceipt1.setBackground(new java.awt.Color(0, 102, 102));
        btnViewReceipt1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnViewReceipt1.setForeground(new java.awt.Color(255, 255, 255));
        btnViewReceipt1.setText("View Receipt");
        btnViewReceipt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewReceipt1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtons1Layout = new javax.swing.GroupLayout(pnlButtons1);
        pnlButtons1.setLayout(pnlButtons1Layout);
        pnlButtons1Layout.setHorizontalGroup(
            pnlButtons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtons1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnViewReceipt1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(btnPrintAgreement1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(btnReset1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        pnlButtons1Layout.setVerticalGroup(
            pnlButtons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtons1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtons1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewReceipt1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrintAgreement1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtFullPayReceipt.setColumns(20);
        txtFullPayReceipt.setRows(5);
        txtFullPayReceipt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane4.setViewportView(txtFullPayReceipt);

        javax.swing.GroupLayout pnlBase1Layout = new javax.swing.GroupLayout(pnlBase1);
        pnlBase1.setLayout(pnlBase1Layout);
        pnlBase1Layout.setHorizontalGroup(
            pnlBase1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBase1Layout.createSequentialGroup()
                .addContainerGap(426, Short.MAX_VALUE)
                .addGroup(pnlBase1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBase1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtDateNow2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(txtTimeNow2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(pnlBase1Layout.createSequentialGroup()
                        .addGroup(pnlBase1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlButtons1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlBase1Layout.createSequentialGroup()
                                .addGroup(pnlBase1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pnlCustomer1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                                    .addComponent(pnlLand1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1029, 1029, 1029)
                        .addGroup(pnlBase1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBase1Layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(txtDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlBase1Layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addComponent(txtTime1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(81, Short.MAX_VALUE))))
            .addGroup(pnlBase1Layout.createSequentialGroup()
                .addGap(734, 734, 734)
                .addComponent(lblSJ1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlBase1Layout.setVerticalGroup(
            pnlBase1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBase1Layout.createSequentialGroup()
                .addGroup(pnlBase1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBase1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblSJ1)
                        .addGap(27, 27, 27)
                        .addGroup(pnlBase1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlBase1Layout.createSequentialGroup()
                                .addComponent(pnlCustomer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pnlLand1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4))
                        .addGap(18, 18, 18)
                        .addComponent(pnlButtons1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBase1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlBase1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDateNow2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTimeNow2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(252, 252, 252)
                        .addComponent(txtDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167)
                        .addComponent(txtTime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBase1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(pnlBase1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(151, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Full Payment", jPanel8);

        jPanel9.setBackground(new java.awt.Color(0, 102, 102));

        jPanel10.setBackground(new java.awt.Color(0, 102, 102));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setText("Payement");

        pte.setText("50000.00");
        pte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pteActionPerformed(evt);
            }
        });

        jLabel12.setText("Date");

        dte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                .addGap(56, 56, 56)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pte, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                    .addComponent(dte))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(dte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        rsr.setBackground(new java.awt.Color(0, 102, 102));
        rsr.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        rsr.setForeground(new java.awt.Color(255, 255, 255));
        rsr.setText("Reset");
        rsr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rsrActionPerformed(evt);
            }
        });

        vrc.setBackground(new java.awt.Color(0, 102, 102));
        vrc.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        vrc.setForeground(new java.awt.Color(255, 255, 255));
        vrc.setText("View Receipt");
        vrc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vrcActionPerformed(evt);
            }
        });

        sp.setBackground(new java.awt.Color(0, 102, 102));
        sp.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sp.setForeground(new java.awt.Color(255, 255, 255));
        sp.setText("Save & Print");
        sp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(423, Short.MAX_VALUE)
                .addComponent(sp, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(271, 271, 271)
                .addComponent(rsr, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(98, 98, 98)
                    .addComponent(vrc, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(967, Short.MAX_VALUE)))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sp, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rsr, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addComponent(vrc, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(26, Short.MAX_VALUE)))
        );

        pnlCustomer2.setBackground(new java.awt.Color(255, 255, 255));
        pnlCustomer2.setMaximumSize(null);
        pnlCustomer2.setPreferredSize(new java.awt.Dimension(570, 190));

        lblNIC2.setText("NIC");

        lblName2.setText("Name");

        txtName2.setEditable(false);

        lblAddress2.setText("Address");

        txtAddress2.setEditable(false);

        cmbNic2.setEditable(true);
        cmbNic2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNic2ItemStateChanged(evt);
            }
        });
        cmbNic2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNic2ActionPerformed(evt);
            }
        });

        lblCusId2.setText("Customer ID");

        cmbCusId2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCusId2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCustomer2Layout = new javax.swing.GroupLayout(pnlCustomer2);
        pnlCustomer2.setLayout(pnlCustomer2Layout);
        pnlCustomer2Layout.setHorizontalGroup(
            pnlCustomer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomer2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(pnlCustomer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCusId2)
                    .addComponent(lblNIC2)
                    .addComponent(lblName2)
                    .addComponent(lblAddress2))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtName2)
                    .addComponent(cmbCusId2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbNic2, javax.swing.GroupLayout.Alignment.LEADING, 0, 338, Short.MAX_VALUE)
                    .addComponent(txtAddress2))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        pnlCustomer2Layout.setVerticalGroup(
            pnlCustomer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomer2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(pnlCustomer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbNic2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNIC2))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCusId2)
                    .addComponent(cmbCusId2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCustomer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress2)
                    .addComponent(txtAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pnlLand2.setBackground(new java.awt.Color(255, 255, 255));
        pnlLand2.setMaximumSize(null);

        lblProjectId2.setText("Project ID");

        cmbProjectId5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProjectId5ItemStateChanged(evt);
            }
        });
        cmbProjectId5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProjectId5ActionPerformed(evt);
            }
        });

        lblBlockId2.setText("Block ID");

        lblLocation2.setText("Location");

        txtLocation2.setEditable(false);
        txtLocation2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocation2ActionPerformed(evt);
            }
        });

        lblAgreement2.setText("Agreement No.");

        txtAgreement2.setEditable(false);
        txtAgreement2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgreement2ActionPerformed(evt);
            }
        });

        prdr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prdrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLand2Layout = new javax.swing.GroupLayout(pnlLand2);
        pnlLand2.setLayout(pnlLand2Layout);
        pnlLand2Layout.setHorizontalGroup(
            pnlLand2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLand2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(pnlLand2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProjectId2)
                    .addComponent(lblBlockId2)
                    .addComponent(lblLocation2)
                    .addComponent(lblAgreement2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlLand2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbProjectId5, 0, 380, Short.MAX_VALUE)
                    .addComponent(txtLocation2)
                    .addComponent(txtAgreement2)
                    .addComponent(prdr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39))
        );
        pnlLand2Layout.setVerticalGroup(
            pnlLand2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLand2Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(pnlLand2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProjectId2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbProjectId5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLand2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBlockId2)
                    .addComponent(prdr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLand2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocation2)
                    .addComponent(txtLocation2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlLand2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgreement2)
                    .addComponent(txtAgreement2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        lblSJ2.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        lblSJ2.setForeground(new java.awt.Color(255, 255, 255));
        lblSJ2.setText("Reserve a Block");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(566, 566, 566)
                        .addComponent(pnlLand2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSJ2, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlCustomer2, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlLand2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(lblSJ2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlCustomer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        rept.setColumns(20);
        rept.setRows(5);
        jScrollPane5.setViewportView(rept);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 978, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 173, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reservation", jPanel9);

        javax.swing.GroupLayout pnlTransLayout = new javax.swing.GroupLayout(pnlTrans);
        pnlTrans.setLayout(pnlTransLayout);
        pnlTransLayout.setHorizontalGroup(
            pnlTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTransLayout.createSequentialGroup()
                .addGap(695, 695, 695)
                .addComponent(lblLandManagement)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1704, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(97, 97, 97))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTransLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
        );
        pnlTransLayout.setVerticalGroup(
            pnlTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTransLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLandManagement)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(pnlTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 859, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 public void AutoComplete(){
        AutoCompleteDecorator.decorate(cmbNic);
    }
    
    public void LoadId(){
        DBSearch obj = new DBSearch();
        ResultSet rs = obj.LoadId();
        
        try{
            while(rs.next()){
                this.cmbProjectId.addItem(rs.getString("LandID"));
            }
        }
        catch(Exception ex){
            System.out.println("Error"+ex.toString());
        }
    }
    
     public void LoadId1(){
        DBSearch obj = new DBSearch();
        ResultSet rs = obj.LoadId();
        
        try{
            while(rs.next()){
                this.cmbProjectId1.addItem(rs.getString("LandID"));
            }
        }
        catch(Exception ex){
            System.out.println("Error"+ex.toString());
        }
    }
    
    /*public void LoadIdBlock(){
        DBSearch obj = new DBSearch();
        ResultSet rs = obj.LoadIdBlock();
        
        try{
            while(rs.next()){
                this.cmbBlockId.addItem(rs.getString("BlockID"));
            }
        }
        catch(Exception ex){
            System.out.println("Error"+ex.toString());
        }
    }*/
    
    public void LoadNIC(){
        DBSearch obj = new DBSearch();
        ResultSet rs = obj.LoadNIC();
        
        try{
            while(rs.next()){
                this.cmbNic.addItem(rs.getString("CustomerNICNumber"));
            }
        }
        catch(Exception ex){
            System.out.println("Error"+ex.toString());
        }
    }
    
     public void LoadNIC1(){
        DBSearch obj = new DBSearch();
        ResultSet rs = obj.LoadNIC1();
        
        try{
            while(rs.next()){
                this.cmbNic1.addItem(rs.getString("CustomerNICNumber"));
            }
        }
        catch(Exception ex){
            System.out.println("Error"+ex.toString());
        }
    }
     
     public void LoadNIC2(){
        DBSearch obj = new DBSearch();
        ResultSet rs = obj.LoadNIC2();
        
        try{
            while(rs.next()){
                this.cmbNic2.addItem(rs.getString("CustomerNICNumber"));
            }
        }
        catch(Exception ex){
            System.out.println("Error"+ex.toString());
        }
    }
    
    private void loadCustomerID() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    DBSearch obj=new DBSearch();
    ResultSet rs=obj.loadAvailableCustomers();
        
        try{
            while(rs.next()){
                cmbCustomerID.addItem(rs.getString("CustomerID"));
                
            }
            
        }
        catch(Exception k){
            System.out.println("Error"+k.toString());
        }
    }
    
    private void loadCustomerID2() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    DBSearch obj=new DBSearch();
    ResultSet rs=obj.loadAvailableCustomers();
        
        try{
            while(rs.next()){
               // cmbCustomerID1.addItem(rs.getString("CustomerID"));
                
            }
            
        }
        catch(Exception k){
            System.out.println("Error"+k.toString());
        }
    }
    
    public void calculatedueAmount(String CustomerID){
        DBSearch obj=new DBSearch();
        ResultSet rs=obj.searchDueAmount(CustomerID);
        
        try{
            while(rs.next()){
                String nextdueDate=rs.getString("NextDueDate");    
                double Balance=Double.valueOf(rs.getString("BalanceOfHirePurchaseAmount"));
                double dueAmount=0;
                
                if(Balance==0.0){
                    txtCurrentDueAmount.setText("0.0");
                    txtCurrentDueDate.setText("Total amount has been paid");
                    
                    btnPay.enable(false);
                }
                else{
                
                        //Due Date
                        String dueDate=nextdueDate;
                        Date date = StringToDate(dueDate); 

                        SimpleDateFormat sdf2 =new SimpleDateFormat("yyyy-MM-dd");
                        String newD = sdf2.format(date);

                        //Current Date.
                        Date currentDate = new Date();
                        SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd");
                        String CurrentDate = sdf.format(currentDate);

                        double lateInterest=lateInterestRate();

                        if(new SimpleDateFormat("yyyy-MM-dd").parse(newD).compareTo(new Date())==1){
                            
                            tp.setText(rs.getString("BalanceOfHirePurchaseAmount"));
                            txtCurrentDueAmount.setText(rs.getString("MonthlyAmount"));
                            txtCurrentDueDate.setText(newD);
                            lblStatus.setText("Not Late");
                            txtCurrentDueDate.setForeground(java.awt.SystemColor.BLACK);
                            lblnoOfMonths.setText("0");

                            updateController obj2=new updateController();
                            obj2.updatebalanceDueAmount(rs.getString("MonthlyAmount"),CustomerID);
                        }
                        else{
                            try{
                                double monthlyamount=Double.parseDouble(rs.getString("MonthlyAmount"));
                                //late interest. 
                                txtCurrentDueDate.setText(newD);
                                txtCurrentDueDate.setForeground(java.awt.SystemColor.RED);
                                lblStatus.setText("Late");

                                //gap in ms.
                                long timeDifference=currentDate.getTime()-date.getTime();                
                                //gap in days.
                                long dayDifferene=(timeDifference/(1000*60*60*24))%365;                

                                double multiple=dayDifferene/30;
                                double remain=dayDifferene%30;
                                double newCurrentAmount=0;

                                if(remain!=0){

                                    multiple=multiple+1;
                                    lblnoOfMonths.setText(""+multiple);


                                    for(int x=0;x<multiple;x++){
                                        newCurrentAmount=dueAmount+monthlyamount;

                                        dueAmount=newCurrentAmount+newCurrentAmount*lateInterest;
                                        System.out.println("in if");

                                    }

                                    DecimalFormat df=new DecimalFormat("####.###");

                                    //Update due amount in table.
                                    updateController obj2=new updateController();
                                    obj2.updatebalanceDueAmount(String.valueOf(dueAmount),CustomerID);
                                    //txtCurrentDueAmount.setText(String.valueOf(dueAmount));
                                    System.out.println(dueAmount);
                                }
                                else{
                                    lblnoOfMonths.setText(""+multiple);
                                    for(int x=0;x<multiple;x++){
                                        newCurrentAmount=dueAmount+monthlyamount;

                                        dueAmount=newCurrentAmount+newCurrentAmount*lateInterest;
                                        //Update due amount in table.
                                        updateController obj2=new updateController();
                                        obj2.updatebalanceDueAmount(String.valueOf(dueAmount),CustomerID);

                                        System.out.println(dueAmount);

                                    }

                                    DecimalFormat df=new DecimalFormat("###.###");
                                        System.out.println("Due Amount : "+df.format(dueAmount));
                                }



                            }
                            catch(Exception e){
                                e.printStackTrace();
                            }

                    }
            }
            
        }
        
    }
    catch(Exception e){
            e.printStackTrace();
        }
        
    }

    public static Date StringToDate(String s){

        Date result = null;
        try{
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            result  = dateFormat.parse(s);
        }

        catch(ParseException e){
            e.printStackTrace();

        }
        return result ;

    }
    
    public double lateInterestRate(){
    //LateInterestRate.
                DBSearch objj=new DBSearch();
                ResultSet rss =objj.searchLateInterestRate();
                try{
                    while(rss.next()){
                        double monthlyRate=Double.valueOf(rss.getString("RateValue"))/100;
                        System.out.println(monthlyRate);
                        return monthlyRate;
                    }
                }
                catch(Exception e){
                        
                }
        return 0.0;
    }
    
    public void displaydueAmount(String CustomerID){
        DBSearch objj=new DBSearch();
        ResultSet rss =objj.searchDueAmount(CustomerID);
            try{
                while(rss.next()){
                    String dueAmount=rss.getString("BalanceDueAmount");
                    double Balance=Double.valueOf(rss.getString("BalanceOfHirePurchaseAmount"));
                
                
                if(Balance==0.0){
                    txtCurrentDueAmount.setText("0.0");
                    txtCurrentDueDate.setText("Total amount has been paid");
                    
                    btnPay.enable(false);
                }
                else{
                    txtCurrentDueAmount.setText(dueAmount);
                    txtPayment.setText(dueAmount);
                }
                    
                }
            }
            catch(Exception e){
                        
            }
    }
    public void clear(){
        txtCurrentDueAmount.setText("");
        txtCurrentDueDate.setText("");
        txtPayment.setText("");
    }
    
    public static void calculateTotalBalance(String CustomerID,double paymentAmount){
        DBSearch objj=new DBSearch();
        ResultSet rss =objj.searchDueAmount(CustomerID);
        
       
        try{
                while(rss.next()){
                    double totalBalance=Double.valueOf(rss.getString("BalanceOfHirePurchaseAmount"));
                    totalBalance=totalBalance-paymentAmount;
                    
                    updateController obj2=new updateController();
                    obj2.updatebalanceTotalAmount(String.valueOf(totalBalance),CustomerID);
                    
                }
            }
            catch(Exception e){
                        
            }
        
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void prdrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prdrActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dFormat=new SimpleDateFormat("yyyyMMdd");
        Date date= new Date();
        txtDate.setText(dFormat.format(date));

        DateTimeFormatter dtf= DateTimeFormatter.ofPattern("HHmmss");
        LocalDateTime now=LocalDateTime.now();
        txtTime.setText(dtf.format(now));

        txtAgreement2.setText("Ref:"+txtDate.getText()+txtTime.getText());
        DBSearch obj=new DBSearch();
        this.prdr.getSelectedItem();
        ResultSet rs=obj.searchblk();
    }//GEN-LAST:event_prdrActionPerformed

    private void txtAgreement2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgreement2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgreement2ActionPerformed

    private void txtLocation2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocation2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLocation2ActionPerformed

    private void cmbProjectId5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProjectId5ActionPerformed
        // TODO add your handling code here:
        DBSearch obj= new DBSearch();
        projectid4= (String) this.cmbProjectId5.getSelectedItem();

        ResultSet rs=obj. searchaproject2(projectid4);
        int flag=0; String Location="";

        try{
            while(rs.next())
            {
                Location=rs.getString("LandLocation");//DB table colum name

                flag=1;

                if(flag==1){
                    this.txtLocation2.setText(Location);
                }

            }
        }catch(Exception k){
            System.out.println("error"+ k.toString());

        }
    }//GEN-LAST:event_cmbProjectId5ActionPerformed

    private void cmbProjectId5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProjectId5ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProjectId5ItemStateChanged

    private void cmbCusId2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCusId2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCusId2ActionPerformed

    private void cmbNic2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNic2ActionPerformed
        // TODO add your handling code here:
        DBSearch obj= new DBSearch();
        Nic2= (String) this.cmbCusId2.getSelectedItem();
        ResultSet rs=obj. serchCustomers2(Nic2);

        int flag=0; String Name="";String Address="";
        try{
            while(rs.next())
            {
                Name=rs.getString("CustomerName");//DB table colum name
                Address=rs.getString("CustomerAddress");

                flag=1;

                if(flag==1){
                    this.txtName2.setText(Name);
                    this.txtAddress2.setText(Address);
                }
            }
            SimpleDateFormat dFormat=new SimpleDateFormat("yyyy/MM/dd");
            Date dater= new Date();
            dte.setText(dFormat.format(dater));
        }
        catch(Exception k){
            System.out.println("error"+ k.toString());

        }
    }//GEN-LAST:event_cmbNic2ActionPerformed

    private void cmbNic2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNic2ItemStateChanged
        // TODO add your handling code here:
        try
        {

            stmt=(Statement) DBCon.getStatementConnection();

            rs = stmt.executeQuery("SELECT CustomerID FROM customertable  where  CustomerNICNumber ='"+cmbNic2.getSelectedItem()+"' ");
            cmbCusId2.removeAllItems();
            while(rs.next()){
                this.cmbCusId2.addItem(rs.getString("CustomerID"));
            }
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbNic2ItemStateChanged

    private void spActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spActionPerformed
        // TODO add your handling code here:
       // rept.setText("");
        
        DateTimeFormatter dnow = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDateTime dtnow = LocalDateTime.now();
        txtDateNow2.setText(dnow.format(dtnow));

        DateTimeFormatter tnow = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalDateTime ttnow = LocalDateTime.now();
        txtTimeNow2.setText(tnow.format(ttnow));

       /* rept.append("\n\t\t     Reservation\n\n\n"
            + "\n\tProject: \t"+cmbProjectId5.getSelectedItem()+"-"+
            txtLocation2.getText()+
            "  Block No: \t"+prdr.getSelectedItem()
            +"\n          ____________________________________________________________________"
            +"\n\t\tCustomer Id: \t\t"+cmbCusId2.getSelectedItem()+"\n"
            +"\t\tName: \t\t"+txtName2.getText()+"\n"
            +"\t\tNIC: \t\t"+cmbNic2.getSelectedItem()+"\n"
            +"\t\tAddress: \t\t"+txtAddress2.getText()+"\n\n"
            +"\t\tPayment: \t\t"+pte.getText()+"\n"
            +"          ____________________________________________________________________"
            +"\n\t\tTime: "+txtTimeNow2.getText()+"\n"
            +"\t\tDate: "+txtDateNow2.getText()+"\n"
            +"\n\t\tThank You For Visiting Us!");*/

        String Bkid = prdr.getSelectedItem().toString();
        String Proi = cmbProjectId5.getSelectedItem().toString();
        String Nic = cmbNic2.getSelectedItem().toString();
        String Cid = cmbCusId2.getSelectedItem().toString();
        String Cuname =txtName2.getText().toString();
        String Addes =txtAddress2.getText().toString();
        String Loc = txtLocation2.getText().toString();
        String Agree =txtAgreement2.getText().toString();
        String Pay = pte.getText().toString();
        String Dte = dte.getText().toString();

        ResControl.resblock(Bkid, Proi, Nic, Cid, Cuname, Addes, Loc, Agree, Pay, Dte);

        try{
            rept.print();
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Not found...", e.getMessage());
        }

        reset();
    }//GEN-LAST:event_spActionPerformed

    private void vrcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vrcActionPerformed
        // TODO add your handling code here:
        DateTimeFormatter dnow = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDateTime dtnow = LocalDateTime.now();
        txtDateNow2.setText(dnow.format(dtnow));

        DateTimeFormatter tnow = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalDateTime ttnow = LocalDateTime.now();
        txtTimeNow2.setText(tnow.format(ttnow));

        rept.append("\n\t\t     Reservation\n\n\n"
            + "\n\tProject: \t"+cmbProjectId5.getSelectedItem()+"-"+
            txtLocation2.getText()+
            "  Block No: \t"+prdr.getSelectedItem()
            +"\n          ____________________________________________________________________"
            +"\n\t\tCustomer Id: \t\t"+cmbCusId2.getSelectedItem()+"\n"
            +"\t\tName: \t\t"+txtName2.getText()+"\n"
            +"\t\tNIC: \t\t"+cmbNic2.getSelectedItem()+"\n"
            +"\t\tAddress: \t\t"+txtAddress2.getText()+"\n\n"
            +"\t\tPayment: \t\t"+pte.getText()+"\n"
            +"          ____________________________________________________________________"
            +"\n\t\tTime: "+txtTimeNow2.getText()+"\n"
            +"\t\tDate: "+txtDateNow2.getText()+"\n"
            +"\n\t\tThank You For Visiting Us!");
    }//GEN-LAST:event_vrcActionPerformed

    private void rsrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rsrActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_rsrActionPerformed

    private void dteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dteActionPerformed

    private void pteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pteActionPerformed

    private void btnViewReceipt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewReceipt1ActionPerformed
        // TODO add your handling code here:
        DateTimeFormatter dnow = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDateTime dtnow = LocalDateTime.now();
        txtDateNow2.setText(dnow.format(dtnow));

        DateTimeFormatter tnow = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalDateTime ttnow = LocalDateTime.now();
        txtTimeNow2.setText(tnow.format(ttnow));

        txtFullPayReceipt.append("\n\t\t     Full Payment\n\n\n"
            + "\n\tProject: \t"+cmbProjectId1.getSelectedItem()+"-"+
            txtLocation1.getText()+
            "  Block No: \t"+cmbBlockId1.getSelectedItem()
            +"\n          ____________________________________________________________________"
            +"\n\t\tCustomer Id: \t\t"+cmbCustomerID.getSelectedItem()+"\n"
            +"\t\tName: \t\t"+txtName1.getText()+"\n"
            +"\t\tNIC: \t\t"+cmbNic1.getSelectedItem()+"\n"
            +"\t\tAddress: \t\t"+txtAddress1.getText()+"\n\n"
            +"\t\tPayment: \t\t"+txtLandValue1.getText()+"\n"
            +"          ____________________________________________________________________"
            +"\n\t\tTime: "+txtTimeNow2.getText()+"\n"
            +"\t\tDate: "+txtDateNow2.getText()+"\n"
            +"\n\t\tThank You For Visiting Us!");
    }//GEN-LAST:event_btnViewReceipt1ActionPerformed

    private void btnReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset1ActionPerformed
        // TODO add your handling code here:

        txtAgreement1.setText("");
        txtFullPayReceipt.setText("");
        txtLandValue.setText("");
    }//GEN-LAST:event_btnReset1ActionPerformed

    private void btnPrintAgreement1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintAgreement1ActionPerformed
        // TODO add your handling code here:
        String AgreementNumber = txtAgreement1.getText().toString();
        String ProjectId = cmbProjectId1.getSelectedItem().toString();
        String BlockNumber = cmbBlockId1.getSelectedItem().toString();
        String CustomerId = cmbCusId1.getSelectedItem().toString();
        String LandValue = txtLandValue1.getText().toString();
        String AgreementDate = txtAgreementDate1.getText().toString();

        addController.addFullPayment(AgreementNumber, ProjectId, BlockNumber, CustomerId, LandValue,AgreementDate);

        try{
            txtFullPayReceipt.print();
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Not found...", e.getMessage());
        }
        DeleteControl.deleteBlock(cmbBlockId1.getSelectedItem().toString());
    }//GEN-LAST:event_btnPrintAgreement1ActionPerformed

    private void txtTime1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTime1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTime1ActionPerformed

    private void cmbCusId1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCusId1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCusId1ActionPerformed

    private void cmbNic1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNic1ActionPerformed
        // TODO add your handling code here:
        DBSearch obj= new DBSearch();
        Nic1= (String) this.cmbCusId1.getSelectedItem();
        ResultSet rs=obj. serchCustomers2(Nic1);

        int flag=0; String Name="";String Address="";
        try{
            while(rs.next())
            {
                Name=rs.getString("CustomerName");//DB table colum name
                Address=rs.getString("CustomerAddress");

                flag=1;

                if(flag==1){
                    this.txtName1.setText(Name);
                    this.txtAddress1.setText(Address);
                }
            }
        }
        catch(Exception k){
            System.out.println("error"+ k.toString());

        }
    }//GEN-LAST:event_cmbNic1ActionPerformed

    private void cmbNic1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNic1ItemStateChanged
        // TODO add your handling code here:
        try
        {

            stmt=(Statement) DBCon.getStatementConnection();

            rs = stmt.executeQuery("SELECT CustomerID FROM customertable  where  CustomerNICNumber ='"+cmbNic1.getSelectedItem()+"' ");
            cmbCusId1.removeAllItems();
            while(rs.next()){
                this.cmbCusId1.addItem(rs.getString("CustomerID"));
            }
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbNic1ItemStateChanged

    private void txtAddress1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddress1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddress1ActionPerformed

    private void txtName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtName1ActionPerformed

    private void txtAgreementDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgreementDate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgreementDate1ActionPerformed

    private void txtAgreement1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgreement1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgreement1ActionPerformed

    private void cmbBlockId1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBlockId1ActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dFormat=new SimpleDateFormat("yyyyMMdd");
        Date date= new Date();
        txtDate1.setText(dFormat.format(date));

        DateTimeFormatter dtf= DateTimeFormatter.ofPattern("HHmmss");
        LocalDateTime now=LocalDateTime.now();
        txtTime1.setText(dtf.format(now));

        txtAgreement1.setText("Ref:"+txtDate1.getText()+txtTime1.getText());
        DBSearch obj= new DBSearch();
        blockid1= (String) this.cmbBlockId1.getSelectedItem();
        ResultSet rs=obj. searchablock(blockid1);

        int flag=0; String Value="";
        try{
            while(rs.next())
            {
                Value=rs.getString("BlockEstimatedValue");//DB table colum name

                flag=1;

                if(flag==1){
                    this.txtLandValue1.setText(Value);
                }
            }
        }catch(Exception k){
            System.out.println("error"+ k.toString());

        }
    }//GEN-LAST:event_cmbBlockId1ActionPerformed

    private void cmbBlockId1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbBlockId1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbBlockId1MouseClicked

    private void cmbBlockId1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbBlockId1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbBlockId1ItemStateChanged

    private void cmbProjectId1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProjectId1ActionPerformed
        // TODO add your handling code here:
        DBSearch obj= new DBSearch();
        projectid1= (String) this.cmbProjectId1.getSelectedItem();
        ResultSet rs=obj. searchaproject(projectid1);
        int flag=0; String Location="";

        try{
            while(rs.next())
            {
                Location=rs.getString("LandLocation");//DB table colum name

                flag=1;

                if(flag==1){
                    this.txtLocation1.setText(Location);
                }

            }
        }catch(Exception k){
            System.out.println("error"+ k.toString());

        }
    }//GEN-LAST:event_cmbProjectId1ActionPerformed

    private void cmbProjectId1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProjectId1ItemStateChanged
        // TODO add your handling code here:
        try
        {

            stmt=(Statement) DBCon.getStatementConnection();

            rs = stmt.executeQuery("SELECT BlockID FROM blockandlandtable  where  LandID ='"+cmbProjectId1.getSelectedItem()+"' ");
            cmbBlockId1.removeAllItems();
            while(rs.next()){
                this.cmbBlockId1.addItem(rs.getString("BlockID"));
            }
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbProjectId1ItemStateChanged

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        DateTimeFormatter dnow = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDateTime dtnow = LocalDateTime.now();
        txtDateNow1.setText(dnow.format(dtnow));

        DateTimeFormatter tnow = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalDateTime ttnow = LocalDateTime.now();
        txtTimeNow1.setText(tnow.format(ttnow));

        txtMonthlyRecipt.append("\n\t\t     Monthy Payment\n\n\n"
            +"\tCustomer Id: \t\t"+cmbCustomerID.getSelectedItem()+"\n"
            +"\tName: \t\t"+txtCustomerName.getText()+"\n"
            +"\tNIC: \t\t"+txtCustomerAddress.getText()+"\n"
            +"\tAddress: \t\t"+txtCustomerNIC.getText()+"\n\n"
            +"\tPayment: \t\t"+txtPayment.getText()+"\n"
            +"\tNext Payment Date: \t"+txtCurrentDueDate.getText()+"\n"
            +"\tDue Amount: \t\t"+txtCurrentDueAmount.getText()+"\n\n"

            +"\tPayment Accepted By: \t..............................\n"

            +"\t\t\t(..............................)\n"
            +"\t\t\tAccount's Executive\n\n"
            +"__________________________________________________________"
            +"\n\t\tTime: "+txtTimeNow1.getText()+"\n"
            +"\t\tDate: "+txtDateNow1.getText()+"\n"
            +"\n\t\tThank You For Visiting Us!");
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnGenarateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenarateActionPerformed
        // TODO add your handling code here:
        try{
            txtMonthlyRecipt.print();
        }
        catch(java.awt.print.PrinterException e){
            System.err.format("Not found...", e.getMessage());
        }
        tp.setText("");
         txtMonthlyRecipt.setText("");
        txtCustomerName.setText("");
        txtCustomerNIC.setText("");
        txtCustomerAddress.setText("");
        txtPayment.setText("");
        txtCurrentDueDate.setText("");
        txtCurrentDueAmount.setText("");
    }//GEN-LAST:event_btnGenarateActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        try{

            String CustomerID=(String)cmbCustomerID.getSelectedItem();
            double paymentAmount=Double.parseDouble(txtPayment.getText());
            double dueAmount=Double.parseDouble(txtCurrentDueAmount.getText());
            String Status=lblStatus.getText();
            double noOfMonths=Double.valueOf(lblnoOfMonths.getText());

            Date currentDate = new Date();
            SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
            String CurrentDate = sdf.format(currentDate);

            String nextdueDate=txtCurrentDueDate.getText();

            //if the whole payment.
            if(paymentAmount==dueAmount){

                if(noOfMonths==0.0){
                    noOfMonths=1.0;
                }
                else{
                    noOfMonths=noOfMonths;
                }
                //month add
                LocalDate dt=LocalDate.parse(nextdueDate);
                LocalDate newDate=dt.plusMonths((long)noOfMonths);

                //System.out.println("Months added date" +newDate);

                double BalanceDueAmount=0;
                addController obj = new addController();
                obj.addMonthlyPayment(CustomerID,String.valueOf(paymentAmount),String.valueOf(BalanceDueAmount),CurrentDate,Status);

                updateController objj=new updateController();
                objj.updatedueDate(String.valueOf(newDate),CustomerID);

                calculatedueAmount(CustomerID);
                displaydueAmount(CustomerID);

                calculateTotalBalance(CustomerID,paymentAmount);
            }
            else{
                /*
                //dueAmount/m
                double BalanceDueAmount=dueAmount-paymentAmount;
                addController obj = new addController();
                obj.addMonthlyPayment(CustomerID,String.valueOf(paymentAmount),String.valueOf(BalanceDueAmount),CurrentDate,Status);

                updateController objj=new updateController();
                objj.updatebalanceDueAmount(String.valueOf(BalanceDueAmount),String.valueOf(newDate),CustomerID);
                */
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPayActionPerformed

    private void cmbCustomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCustomerIDActionPerformed

        String CustomerID=(String)cmbCustomerID.getSelectedItem();

        DBSearch obj=new DBSearch();
        ResultSet rs=obj.serchCustomers(CustomerID);

        try{
            while(rs.next()){
                txtCustomerName.setText(rs.getString("CustomerName"));
                txtCustomerNIC.setText(rs.getString("CustomerAddress"));
                txtCustomerAddress.setText(rs.getString("CustomerNICNumber"));

                clear();

            }
            calculatedueAmount(CustomerID);
            displaydueAmount(CustomerID);
        }
        catch(Exception k){
            System.out.println("Error"+k.toString());
        }
    }//GEN-LAST:event_cmbCustomerIDActionPerformed

    private void btnViewReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewReceiptActionPerformed
        // TODO add your handling code here:
        DateTimeFormatter dnow = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDateTime dtnow = LocalDateTime.now();
        txtDateNow.setText(dnow.format(dtnow));

        DateTimeFormatter tnow = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalDateTime ttnow = LocalDateTime.now();
        txtTimeNow.setText(tnow.format(ttnow));

        txtReceipt.append("\n\t                 Project: \t"+cmbProjectId.getSelectedItem()+"-"+
            txtLocation.getText()+
            "  Block No: \t"+cmbBlockId.getSelectedItem()+
            "\n_______________________________________________________________________________________________"+
            "\n\nAgreement No: \t"+txtAgreement.getText()+
            "\nCustomer: \t\t\t"+txtName.getText()+
            "\nNIC: \t\t\t"+cmbNic.getSelectedItem()+
            "\nAddress: \t\t\t"+txtAddress.getText()+

            "\n_______________________________________________________________________________________________"+
            "\n\n\t\t                    Easy Payment Agreement\n"+
            "\nLand Value: \t\t\t"+txtLandValue.getText()+
            "\nAdvance Payment: ("+lblAdvanceRate.getText()+lblPercentageMark.getText()+")\t\t"+txtAdvance.getText()+
            "\nBalance Amount: \t\t"+txtBalanceAmount.getText()+
            "\n_______________________________________________________________________________________________"+
            "\n\nRate Per Annum: \t\t"+lblAnnumRate.getText()+lblPercentageMark.getText()+
            "\nPeriod: \t\t\t"+txtYears.getText()+" Years  "+ txtMonths.getText()+" Months"+
            "\nInstallments: \t\t\t"+txtInstallments.getText()+
            "\nMonthly Installment: \t\t"+txtMonthlyInstallment.getText()+
            "\nHire Purchase Amount: \t\t"+txtHirePurchaseAmount.getText()+
            "\nBalance of Hire Purchase Amount: \t"+txtBalanceOfHPA.getText()+
            "\n_______________________________________________________________________________________________"+
            "\n\nAgreement Date: \t\t"+txtAgreementDate.getText()+
            "\nCompleted Date: \t\t"+txtCompletedDate.getText()+
            "\nDue Date: \t\t\t"+txtDueDate.getText()+
            "\nNext Payment Date: \t\t"+txtNextPaymentDate.getText()+
            "\n_______________________________________________________________________________________________"+
            "\n\t\t\tTime: "+txtTimeNow.getText()+
            "\n\t\t\tDate: "+txtDateNow.getText()+
            "\n\t\t                    Thank You For Visiting Us!"

        );
    }//GEN-LAST:event_btnViewReceiptActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtLocation.setText("");
        txtAgreement.setText("");
        lblAdvanceRate.setText("");
        lblAnnumRate.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtLandValue.setText("");
        txtAdvance.setText("");
        txtBalanceAmount.setText("");
        txtYears.setText("");
        txtMonths.setText("");
        txtInstallments.setText("");
        txtMonthlyInstallment.setText("");
        txtHirePurchaseAmount.setText("");
        txtBalanceOfHPA.setText("");
        txtTotalInterest.setText("");
        txtCompletedDate.setText("");
        txtNextPaymentDate.setText("");
        txtDueDate.setText("");
        txtReceipt.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnPrintAgreementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintAgreementActionPerformed
        // TODO add your handling code here:
       // txtReceipt.setText("");
        
        String AgreementNumber = txtAgreement.getText().toString();
        String ProjectId = cmbProjectId.getSelectedItem().toString();
        String BlockNumber = cmbBlockId.getSelectedItem().toString();
        String CustomerId = cmbCusId.getSelectedItem().toString();
        String LandValue = txtLandValue.getText().toString();
        String AdvancePayment = txtAdvance.getText().toString();
        String BalanceAmount = txtBalanceAmount.getText().toString();
        String Installments = txtInstallments.getText().toString();
        String MonthlyInstallment = txtMonthlyInstallment.getText().toString();
        String HirePurchaseAmount = txtHirePurchaseAmount.getText().toString();
        String BalanceOfHPA = txtBalanceOfHPA.getText().toString();
        String TotalInterest = txtTotalInterest.getText().toString();
        String PlatRate = txtPlatRate.getText().toString();
        String AgreementDate = txtAgreementDate.getText().toString();
        String CompletedDate = txtCompletedDate.getText().toString();
        String DueDate = txtDueDate.getText().toString();
        String FirstPaymentDate = txtNextPaymentDate.getText().toString();
        String BalanceDueAmount = txtMonthlyInstallment.getText().toString();

        if(AdvancePayment.isEmpty()||FirstPaymentDate.isEmpty()||DueDate.isEmpty()){
            JOptionPane.showMessageDialog(null,"Invalid Data");
        }

        else{

            addController.addNewAgreement(AgreementNumber, ProjectId, BlockNumber, CustomerId, LandValue,AdvancePayment,BalanceAmount,Installments,MonthlyInstallment,HirePurchaseAmount,BalanceOfHPA,TotalInterest,PlatRate,AgreementDate,CompletedDate,DueDate,FirstPaymentDate);

            addController.addNewMonthlyAmount(CustomerId,MonthlyInstallment,FirstPaymentDate,BalanceOfHPA,BalanceDueAmount);

            try{
                txtReceipt.print();
            }
            catch(java.awt.print.PrinterException e){
                System.err.format("Not found...", e.getMessage());
            }
        }
         if(AdvancePayment.isEmpty()||FirstPaymentDate.isEmpty()||DueDate.isEmpty()){
            JOptionPane.showMessageDialog(null,"Invalid Data");
        }else{
         DeleteControl.deleteBlock(cmbBlockId.getSelectedItem().toString());
         }
        
        
        
    }//GEN-LAST:event_btnPrintAgreementActionPerformed

    private void txtCompletedDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompletedDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCompletedDateActionPerformed

    private void txtCompletedDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCompletedDateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCompletedDateMouseClicked

    private void txtTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeActionPerformed

    private void txtPlatRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlatRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlatRateActionPerformed

    private void txtMonthlyInstallmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMonthlyInstallmentMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonthlyInstallmentMouseClicked

    private void txtInstallmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInstallmentsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInstallmentsActionPerformed

    private void txtInstallmentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtInstallmentsMouseClicked
        // TODO add your handling code here:
        String years=this.txtYears.getText();
        String months=this.txtMonths.getText();
        if(years.isEmpty()){
            txtYears.setText("0");
        }
        if(months.isEmpty()){
            txtMonths.setText("0");
        }

        String Yr = txtYears.getText();
        int Years = Integer.parseInt(Yr);

        String Mnt = txtMonths.getText();
        int Months = Integer.parseInt(Mnt);

        int Ins = (Years*12) + Months;
        this.txtInstallments.setText(""+Ins);

        Inst = Ins;

        double MonthlyInstallment = (Bal*Anm/1200*Math.pow(1+Anm/1200, Inst))/(Math.pow(1+Anm/1200,Inst)-1);

        this.txtMonthlyInstallment.setText(""+df.format(MonthlyInstallment));

        double BalanceOFHPA = MonthlyInstallment*Ins;
        this.txtBalanceOfHPA.setText(""+df.format(BalanceOFHPA));

        double TotalInterest = BalanceOFHPA - Bal;
        this.txtTotalInterest.setText(""+df.format(TotalInterest));

        double HirePurchaseAmount = Value + TotalInterest;
        this.txtHirePurchaseAmount.setText(""+df.format(HirePurchaseAmount));

        double PlatRate = (TotalInterest/Bal)/Ins;
        this.txtPlatRate.setText(""+decFormat.format(PlatRate));

        String s1 =txtAgreementDate.getText();
        char[] chDue = new char[2];
        char[] chCom = new char[4];
        char[] chCom1 = new char[2];
        char[] chMnt = new char[2];

        s1.getChars(0, 2, chDue, 0);
        s1.getChars(6, 10, chCom, 0);
        s1.getChars(3, 5, chCom1, 0);
        s1.getChars(3, 5, chMnt, 0);

        int due = contains1 (chDue);
        int com = contains2 (chCom);
        int com1 = contains3 (chCom1);
        int addYrs = Inst/12;
        int comYr = com+addYrs;
        int addMnt = Inst%12;
        int comMnt = com1+addMnt;
        int number = contains (chMnt);
        int mn = number+1;

        //*********************Completed Date*****************//

        if(comMnt==1||comMnt==3||comMnt==5||comMnt==7||comMnt==8||comMnt==10||comMnt==12){
            if(due<32){
                if(due<10){
                    if(comMnt<=12){
                        if(comMnt<10){
                            txtCompletedDate.setText("0"+due+"-0"+comMnt+"-"+comYr);
                        }
                        else{
                            txtCompletedDate.setText("0"+due+"-"+comMnt+"-"+comYr);
                        }
                    }

                    else{

                        int newMnt = comMnt%12;
                        if(newMnt<10){
                            txtCompletedDate.setText("0"+due+"-0"+newMnt+"-"+comYr);
                        }
                        else{
                            txtCompletedDate.setText("0"+due+"-"+newMnt+"-"+comYr);
                        }
                    }
                }

                else{
                    if(comMnt<=12){
                        if(comMnt<10){
                            txtCompletedDate.setText(""+due+"-0"+comMnt+"-"+comYr);
                        }

                        else{
                            txtCompletedDate.setText(""+due+"-"+comMnt+"-"+comYr);
                        }
                    }

                    else{
                        int newMnt = comMnt%12;
                        if(newMnt<10){
                            txtCompletedDate.setText(""+due+"-0"+newMnt+"-"+comYr);
                        }
                        else{
                            txtCompletedDate.setText(""+due+"-"+newMnt+"-"+comYr);
                        }
                    }
                }
                lblCompleteDateVal.setText("");
            }

            else{
                lblCompleteDateVal.setText("Invalid Date!");
            }
        }

        else if(comMnt==4||comMnt==6||comMnt==9||comMnt==11){
            if(due<31){
                if(due<10){
                    if(comMnt<=12){
                        if(comMnt<10){
                            txtCompletedDate.setText("0"+due+"-0"+comMnt+"-"+comYr);
                        }
                        else{
                            txtCompletedDate.setText("0"+due+"-"+comMnt+"-"+comYr);
                        }
                    }

                    else{

                        int newMnt = comMnt%12;
                        if(newMnt<10){
                            txtCompletedDate.setText("0"+due+"-0"+newMnt+"-"+comYr);
                        }
                        else{
                            txtCompletedDate.setText("0"+due+"-"+newMnt+"-"+comYr);
                        }
                    }
                }

                else{
                    if(comMnt<=12){
                        if(comMnt<10){
                            txtCompletedDate.setText(""+due+"-0"+comMnt+"-"+comYr);
                        }

                        else{
                            txtCompletedDate.setText(""+due+"-"+comMnt+"-"+comYr);
                        }
                    }

                    else{
                        int newMnt = comMnt%12;
                        if(newMnt<10){
                            txtCompletedDate.setText(""+due+"-0"+newMnt+"-"+comYr);
                        }
                        else{
                            txtCompletedDate.setText(""+due+"-"+newMnt+"-"+comYr);
                        }
                    }
                }
                lblCompleteDateVal.setText("");
            }

            else{
                lblCompleteDateVal.setText("Invalid Date!");
            }
        }

        else{
            if(comMnt==2){
                if(due<30){
                    if(due<10){
                        if(comMnt<=12){
                            if(comMnt<10){
                                txtCompletedDate.setText("0"+due+"-0"+comMnt+"-"+comYr);
                            }
                            else{
                                txtCompletedDate.setText("0"+due+"-"+comMnt+"-"+comYr);
                            }
                        }

                        else{

                            int newMnt = comMnt%12;
                            if(newMnt<10){
                                txtCompletedDate.setText("0"+due+"-0"+newMnt+"-"+comYr);
                            }
                            else{
                                txtCompletedDate.setText("0"+due+"-"+newMnt+"-"+comYr);
                            }
                        }
                    }

                    else{
                        if(comMnt<=12){
                            if(comMnt<10){
                                txtCompletedDate.setText(""+due+"-0"+comMnt+"-"+comYr);
                            }

                            else{
                                txtCompletedDate.setText(""+due+"-"+comMnt+"-"+comYr);
                            }
                        }

                        else{
                            int newMnt = comMnt%12;
                            if(newMnt<10){
                                txtCompletedDate.setText(""+due+"-0"+newMnt+"-"+comYr);
                            }
                            else{
                                txtCompletedDate.setText(""+due+"-"+newMnt+"-"+comYr);
                            }
                        }
                    }
                    lblCompleteDateVal.setText("");
                }

                else{
                    lblCompleteDateVal.setText("Invalid Date!");
                }
            }
        }

        //*******************************Due Date***************************//
        if(due==01||due==21||due==31){
            if(due<10){
                txtDueDate.setText("0"+due+" st");
            }
            else{
                txtDueDate.setText(""+due+" st");
            }
        }

        else if(due==02||due==22){
            if(due<10){
                txtDueDate.setText("0"+due+" nd");
            }
            else{
                txtDueDate.setText(""+due+" nd");
            }
        }

        else if(due==03||due==23){
            if(due<10){
                txtDueDate.setText("0"+due+"rd");
            }
            else{
                txtDueDate.setText(""+due+"rd");
            }
        }

        else{
            if(due<10){
                txtDueDate.setText("0"+due+" th");
            }
            else{
                txtDueDate.setText(""+due+" th");
            }
        }

        //********************************NextPaymentDate********************//
        if(mn<=12){
            if(due<10){
                if(mn<10){
                    txtNextPaymentDate.setText("0"+com+"-0"+mn+"-"+due);
                }
                else{
                    txtNextPaymentDate.setText("0"+com+"-"+mn+"-"+due);
                }
            }
            else{
                if(mn<10){
                    txtNextPaymentDate.setText(""+com+"-0"+mn+"-"+due);
                }
                else{
                    txtNextPaymentDate.setText(""+com+"-"+mn+"-"+due);
                }
            }
        }
        else{
            int newyr = com+1;
            int newMn = mn%12;

            if(due<10){
                if(newMn<10){
                    txtNextPaymentDate.setText("0"+newyr+"-0"+newMn+"-"+due);
                }
                else{
                    txtNextPaymentDate.setText("0"+newyr+"-"+newMn+"-"+due);
                }
            }
            else{
                if(newMn<10){
                    txtNextPaymentDate.setText(""+newyr+"-0"+newMn+"-"+due);
                }
                else{
                    txtNextPaymentDate.setText(""+newyr+"-"+newMn+"-"+due);
                }
            }
        }
    }//GEN-LAST:event_txtInstallmentsMouseClicked

    private void txtMonthsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMonthsKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonthsKeyPressed

    private void txtMonthsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonthsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonthsActionPerformed

    private void txtMonthsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMonthsMouseClicked
        // TODO add your handling code here:
        this.txtMonths.setText("");
    }//GEN-LAST:event_txtMonthsMouseClicked

    private void txtYearsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtYearsMouseClicked
        // TODO add your handling code here:
        this.txtYears.setText("");
        this.txtYears.getText();
    }//GEN-LAST:event_txtYearsMouseClicked

    private void txtBalanceAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalanceAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceAmountActionPerformed

    private void txtBalanceAmountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBalanceAmountMouseClicked
        // TODO add your handling code here:
       double am = Double.parseDouble(txtLandValue.getText());
        double pm = Double.parseDouble(txtAdvance.getText());
        this.txtAdvance.setText(""+pm+"0");
        double fm = am-pm;
        this.txtBalanceAmount.setText(""+fm+"0");
        
        
    }//GEN-LAST:event_txtBalanceAmountMouseClicked

    private void txtAdvanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAdvanceMouseClicked
        // TODO add your handling code here:
        /*double EstVal = Double.parseDouble(txtLandValue.getText());
        String AdvR = lblAdvanceRate.getText();
        double AdvRate = Double.parseDouble(AdvR);

        double Advance = EstVal*AdvRate/100;

        this.txtAdvance.setText(""+Advance);*/
    }//GEN-LAST:event_txtAdvanceMouseClicked

    private void txtLandValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLandValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLandValueActionPerformed

    private void cmbCusIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCusIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCusIdActionPerformed

    private void cmbNicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNicActionPerformed
        // TODO add your handling code here:
        DBSearch obj= new DBSearch();
        Nic= (String) this.cmbCusId.getSelectedItem();
        ResultSet rs=obj. serchCustomers(Nic);

        int flag=0; String Name="";String Address="";
        try{
            while(rs.next())
            {
                Name=rs.getString("CustomerName");//DB table colum name
                Address=rs.getString("CustomerAddress");

                flag=1;

                if(flag==1){
                    this.txtName.setText(Name);
                    this.txtAddress.setText(Address);
                }
            }
        }
        catch(Exception k){
            System.out.println("error"+ k.toString());

        }
    }//GEN-LAST:event_cmbNicActionPerformed

    private void cmbNicItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNicItemStateChanged
        // TODO add your handling code here:
        try
        {

            stmt=(Statement) DBCon.getStatementConnection();

            rs = stmt.executeQuery("SELECT CustomerID FROM customertable  where  CustomerNICNumber ='"+cmbNic.getSelectedItem()+"' ");
            cmbCusId.removeAllItems();
            while(rs.next()){
                this.cmbCusId.addItem(rs.getString("CustomerID"));
            }
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbNicItemStateChanged

    private void txtAgreementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgreementActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgreementActionPerformed

    private void txtLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLocationActionPerformed

    private void cmbBlockIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBlockIdActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dFormat=new SimpleDateFormat("yyyyMMdd");
        Date date= new Date();
        txtDate.setText(dFormat.format(date));

        DateTimeFormatter dtf= DateTimeFormatter.ofPattern("HHmmss");
        LocalDateTime now=LocalDateTime.now();
        txtTime.setText(dtf.format(now));

        txtAgreement.setText("Ref:"+txtDate.getText()+txtTime.getText());
        DBSearch obj= new DBSearch();
        blockid= (String) this.cmbBlockId.getSelectedItem();
        ResultSet rs=obj. searchablock(blockid);

        int flag=0; String Value="";
        try{
            while(rs.next())
            {
                Value=rs.getString("BlockEstimatedValue");//DB table colum name

                flag=1;

                if(flag==1){
                    this.txtLandValue.setText(Value);
                }
            }
        }catch(Exception k){
            System.out.println("error"+ k.toString());

        }
    }//GEN-LAST:event_cmbBlockIdActionPerformed

    private void cmbBlockIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbBlockIdMouseClicked
        // TODO add your handling code here:
        double EstVal = Double.parseDouble(txtLandValue.getText());
        Value=EstVal;

        String AdvR = lblAdvanceRate.getText();
        double AdvRate = Double.parseDouble(AdvR);

        double Advance = EstVal*AdvRate/100;
        this.txtAdvance.setText(""+Advance+"0");
        Adv = Advance;
        
         double Balance = EstVal-Advance;
        this.txtBalanceAmount.setText(""+Balance+"0");
        Bal = Balance;

       

        String AnmR = lblAnnumRate.getText();
        double AnmRate = Double.parseDouble(AnmR);
        Anm = AnmRate;
    }//GEN-LAST:event_cmbBlockIdMouseClicked

    private void cmbBlockIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbBlockIdItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbBlockIdItemStateChanged

    private void cmbProjectIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProjectIdActionPerformed
        // TODO add your handling code here:
        DBSearch obj= new DBSearch();
        DBSearch obj1 = new DBSearch();
        DBSearch obj2 = new DBSearch();

        projectid= (String) this.cmbProjectId.getSelectedItem();

        ResultSet rs=obj. searchaproject(projectid);
        ResultSet rs1 = obj1.searchadvancerate(ratename);
        ResultSet rs2 = obj2.searchannumrate(ratename);

        int flag=0; String Location="";
        int flag1=0; String Advancerate="";
        int flag2=0; String Annumrate="";

        try{
            while(rs.next())
            {
                Location=rs.getString("LandLocation");//DB table colum name

                flag=1;

                if(flag==1){
                    this.txtLocation.setText(Location);
                }

            }
        }catch(Exception k){
            System.out.println("error"+ k.toString());

        }

        try{
            while(rs1.next())
            {
                Advancerate=rs1.getString("RateValue");//DB table colum name

                flag1=1;

                if(flag1==1){
                    this.lblAdvanceRate.setText(""+Advancerate);
                }

            }
        }catch(Exception k){
            System.out.println("error"+ k.toString());

        }

        try{
            while(rs2.next())
            {
                Annumrate=rs2.getString("RateValue");//DB table colum name

                flag2=1;

                if(flag2==1){
                    this.lblAnnumRate.setText(Annumrate);
                }

            }
        }catch(Exception k){
            System.out.println("error"+ k.toString());

        }
    }//GEN-LAST:event_cmbProjectIdActionPerformed

    private void cmbProjectIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProjectIdItemStateChanged
        // TODO add your handling code here:
        try
        {

            stmt=(Statement) DBCon.getStatementConnection();

            rs = stmt.executeQuery("SELECT BlockID FROM blockandlandtable  where  LandID ='"+cmbProjectId.getSelectedItem()+"' ");
            cmbBlockId.removeAllItems();
            while(rs.next()){
                this.cmbBlockId.addItem(rs.getString("BlockID"));
            }
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_cmbProjectIdItemStateChanged

    private void txtHirePurchaseAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHirePurchaseAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHirePurchaseAmountActionPerformed

    private void txtLandValue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLandValue1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLandValue1ActionPerformed

    private void txtBalanceAmountMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBalanceAmountMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceAmountMouseEntered

    private void txtCurrentDueAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentDueAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurrentDueAmountActionPerformed

    private void tpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpActionPerformed
public static int contains1(final char[] chDue) {
        int due = Integer.parseInt(new String(chDue));
        return due; 
    }
 public static int contains2(final char[] chCom) {
        int com = Integer.parseInt(new String(chCom));
        return com; 
    }
 public static int contains3(final char[] chCom1) {
        int com1 = Integer.parseInt(new String(chCom1));
        return com1; 
    }
 
  public static int contains(final char[] chMnt) {
        int number = Integer.parseInt(new String(chMnt));
        return number; 
    }
  
    public void loadlif() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    DBSearch obj=new DBSearch();
    ResultSet rs=obj.loadland();
        
        try{
            while(rs.next()){
                this.cmbProjectId5.addItem(rs.getString("LandID"));
                
            }
            
        }
        catch(Exception k){
            System.out.println("Error"+k.toString());
        }
    }
    
    public void loadlbkid() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    DBSearch obj=new DBSearch();
    ResultSet rs=obj.LoadIdbl();
        
        try{
            while(rs.next()){
                this.prdr.addItem(rs.getString("BlockID"));
                
            }
            
        }
        catch(Exception k){
            System.out.println("Error"+k.toString());
        }
    }public void loadpro() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    DBSearch obj=new DBSearch();
    ResultSet rs=obj.Loadptoid();
        
        try{
            while(rs.next()){
              //  this.gill.addItem(rs.getString("ProjectId"));
                
            }
            
        }
        catch(Exception k){
            System.out.println("Error"+k.toString());
        }
    }
public void reset(){
   rept.setText("");
   pte.setText("50000.00"); 
   txtAgreement2.setText("");
}

public void resett(){
    txtReceipt.setText("");


}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenarate;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnPrintAgreement;
    private javax.swing.JButton btnPrintAgreement1;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnReset1;
    private javax.swing.JButton btnViewReceipt;
    private javax.swing.JButton btnViewReceipt1;
    private javax.swing.JComboBox<String> cmbBlockId;
    private javax.swing.JComboBox<String> cmbBlockId1;
    private javax.swing.JComboBox<String> cmbCusId;
    private javax.swing.JComboBox<String> cmbCusId1;
    private javax.swing.JComboBox<String> cmbCusId2;
    private javax.swing.JComboBox<String> cmbCustomerID;
    private javax.swing.JComboBox<String> cmbNic;
    private javax.swing.JComboBox<String> cmbNic1;
    private javax.swing.JComboBox<String> cmbNic2;
    private javax.swing.JComboBox<String> cmbProjectId;
    private javax.swing.JComboBox<String> cmbProjectId1;
    private javax.swing.JComboBox<String> cmbProjectId5;
    private javax.swing.JTextField dte;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAddress1;
    private javax.swing.JLabel lblAddress2;
    private javax.swing.JLabel lblAdvance;
    private javax.swing.JLabel lblAdvanceRate;
    private javax.swing.JLabel lblAgreeDateVal;
    private javax.swing.JLabel lblAgreeDateVal1;
    private javax.swing.JLabel lblAgreement;
    private javax.swing.JLabel lblAgreement1;
    private javax.swing.JLabel lblAgreement2;
    private javax.swing.JLabel lblAgreementDate;
    private javax.swing.JLabel lblAgreementDate1;
    private javax.swing.JLabel lblAnnum;
    private javax.swing.JLabel lblAnnumRate;
    private javax.swing.JLabel lblBalanceAmount;
    private javax.swing.JLabel lblBalanceOfHPA;
    private javax.swing.JLabel lblBlockId;
    private javax.swing.JLabel lblBlockId1;
    private javax.swing.JLabel lblBlockId2;
    private javax.swing.JLabel lblCompleteDateVal;
    private javax.swing.JLabel lblCompletedDate;
    private javax.swing.JLabel lblCusId;
    private javax.swing.JLabel lblCusId1;
    private javax.swing.JLabel lblCusId2;
    private javax.swing.JLabel lblDueDate;
    private javax.swing.JLabel lblDueDateVal;
    private javax.swing.JLabel lblFirstDateVal;
    private javax.swing.JLabel lblHirePurchaseAmount;
    private javax.swing.JLabel lblInstallments;
    private javax.swing.JLabel lblLandManagement;
    private javax.swing.JLabel lblLandValue;
    private javax.swing.JLabel lblLandValue1;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblLocation1;
    private javax.swing.JLabel lblLocation2;
    private javax.swing.JLabel lblMonthlyInstallment;
    private javax.swing.JLabel lblNIC;
    private javax.swing.JLabel lblNIC1;
    private javax.swing.JLabel lblNIC2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblNextPaymentDate;
    private javax.swing.JLabel lblPM;
    private javax.swing.JLabel lblPercentageMark;
    private javax.swing.JLabel lblPeriod;
    private javax.swing.JLabel lblPlatRate;
    private javax.swing.JLabel lblProjectId;
    private javax.swing.JLabel lblProjectId1;
    private javax.swing.JLabel lblProjectId2;
    private javax.swing.JLabel lblSJ;
    private javax.swing.JLabel lblSJ1;
    private javax.swing.JLabel lblSJ2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTotalInterest;
    private javax.swing.JLabel lblYears;
    private javax.swing.JLabel lblnoOfMonths;
    private javax.swing.JPanel pnlBase;
    private javax.swing.JPanel pnlBase1;
    private javax.swing.JPanel pnlBill;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlButtons1;
    private javax.swing.JPanel pnlCustomer;
    private javax.swing.JPanel pnlCustomer1;
    private javax.swing.JPanel pnlCustomer2;
    private javax.swing.JPanel pnlDate;
    private javax.swing.JPanel pnlLand;
    private javax.swing.JPanel pnlLand1;
    private javax.swing.JPanel pnlLand2;
    private javax.swing.JPanel pnlTextField;
    private javax.swing.JPanel pnlTrans;
    private javax.swing.JComboBox<String> prdr;
    private javax.swing.JTextField pte;
    private javax.swing.JTextArea rept;
    private javax.swing.JButton rsr;
    private javax.swing.JButton sp;
    private javax.swing.JTextField tp;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAddress1;
    private javax.swing.JTextField txtAddress2;
    private javax.swing.JTextField txtAdvance;
    private javax.swing.JTextField txtAgreement;
    private javax.swing.JTextField txtAgreement1;
    private javax.swing.JTextField txtAgreement2;
    private javax.swing.JTextField txtAgreementDate;
    private javax.swing.JTextField txtAgreementDate1;
    private javax.swing.JTextField txtBalanceAmount;
    private javax.swing.JTextField txtBalanceOfHPA;
    private javax.swing.JTextField txtCompletedDate;
    private javax.swing.JTextField txtCurrentDueAmount;
    private javax.swing.JTextField txtCurrentDueDate;
    private javax.swing.JTextField txtCustomerAddress;
    private javax.swing.JTextField txtCustomerNIC;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDate1;
    private javax.swing.JTextField txtDateNow;
    private javax.swing.JTextField txtDateNow1;
    private javax.swing.JTextField txtDateNow2;
    private javax.swing.JTextField txtDueDate;
    private javax.swing.JTextArea txtFullPayReceipt;
    private javax.swing.JTextField txtHirePurchaseAmount;
    private javax.swing.JTextField txtInstallments;
    private javax.swing.JTextField txtLandValue;
    private javax.swing.JTextField txtLandValue1;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtLocation1;
    private javax.swing.JTextField txtLocation2;
    private javax.swing.JTextField txtMonthlyInstallment;
    private javax.swing.JTextArea txtMonthlyRecipt;
    private javax.swing.JTextField txtMonths;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    private javax.swing.JTextField txtName2;
    private javax.swing.JTextField txtNextPaymentDate;
    private javax.swing.JTextField txtPayment;
    private javax.swing.JTextField txtPlatRate;
    private javax.swing.JTextArea txtReceipt;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtTime1;
    private javax.swing.JTextField txtTimeNow;
    private javax.swing.JTextField txtTimeNow1;
    private javax.swing.JTextField txtTimeNow2;
    private javax.swing.JTextField txtTotalInterest;
    private javax.swing.JTextField txtYears;
    private javax.swing.JButton vrc;
    // End of variables declaration//GEN-END:variables
}
